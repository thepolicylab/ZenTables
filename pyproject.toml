[project]
name = "zentables"
version = "0.3.0b1"
description = "Stress-free descriptive tables in Python."
authors = [
    { name = "Paul Xu", email = "yang_xu@brown.edu" },
    { name = "Edward Huh", email = "edward_huh@brown.edu" },
    { name = "Kevin Wilson", email = "kevin_wilson@brown.edu" },
    { name = "The Policy Lab", email = "thepolicylab@brown.edu" },
]
maintainers = [{ name = "Paul Xu", email = "yang_xu@brown.edu" }]
requires-python = ">=3.9"
readme = "README.md"
keywords = ["pandas", "tables", "display", "styler"]
classifiers = [
    'Development Status :: 4 - Beta',

    'Intended Audience :: Science/Research',
    'Topic :: Scientific/Engineering',

    'License :: OSI Approved :: MIT License',

    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
]
dependencies = ["pandas>=2.0.0rc1"]

[project.urls]
repository = "https://github.com/thepolicylab/ZenTables.git"

[project.optional-dependencies]
dev = [
    "black[jupyter]",
    "ruff",
    "pytest",
    "mypy",
    "jupyterlab",
    "pre-commit",
    "isort",
]

[tool.hatch.envs.dev]
python = "3.9"
features = ["dev"]

[tool.black]
target-version = ['py39']
required-version = '23.3.0'
exclude = '''
(
    asv_bench/env
  | \.egg
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | setup.py
)
'''

[tool.ruff]
line-length = 88
update-check = false
target-version = "py39"
fix = true
unfixable = ["E711"]

select = [
    # pyflakes
    "F",
    # pycodestyle
    "E",
    "W",
    # flake8-2020
    "YTT",
    # flake8-bugbear
    "B",
    # flake8-quotes
    "Q",
    # pylint
    "PLE",
    "PLR",
    "PLW",
    # misc lints
    "PIE",
    # flake8-pyi
    "PYI",
    # tidy imports
    "TID",
    # implicit string concatenation
    "ISC",
    # type-checking imports
    "TCH",
]


ignore = [
    # space before : (needed for how black formats slicing)
    # "E203",  # not yet implemented
    # module level import not at top of file
    "E402",
    # do not assign a lambda expression, use a def
    "E731",
    # line break before binary operator
    # "W503",  # not yet implemented
    # line break after binary operator
    # "W504",  # not yet implemented
    # controversial
    "B006",
    # controversial
    "B007",
    # controversial
    "B008",
    # setattr is used to side-step mypy
    "B009",
    # getattr is used to side-step mypy
    "B010",
    # tests use assert False
    "B011",
    # tests use comparisons but not their returned value
    "B015",
    # false positives
    "B019",
    # Loop control variable overrides iterable it iterates
    "B020",
    # Function definition does not bind loop variable
    "B023",
    # Functions defined inside a loop must not use variables redefined in the loop
    # "B301",  # not yet implemented
    # Too many arguments to function call
    "PLR0913",
    # Too many returns
    "PLR0911",
    # Too many branches
    "PLR0912",
    # Too many statements
    "PLR0915",
    # Global statements are discouraged
    "PLW0603",
    # Docstrings should not be included in stubs
    "PYI021",
    # Use typing_extensions.TypeAlias for type aliases
    # "PYI026",  # not yet implemented
    # Use "collections.abc.*" instead of "typing.*" (PEP 585 syntax)
    # "PYI027",  # not yet implemented
    # while int | float can be shortened to float, the former is more explicit
    # "PYI041",  # not yet implemented

    # Additional checks that don't pass yet
    # Within an except clause, raise exceptions with ...
    "B904",
    # Magic number
    "PLR2004",
    # Consider `elif` instead of `else` then `if` to remove indentation level
    "PLR5501",
]

exclude = [".github", "docs", "src/notebook"]

[tool.mypy]
ignore_missing_imports = true
python_version = "3.9"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
